# Generated by Django 2.2.4 on 2019-09-03 14:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='是否私密')),
                ('AboutMe', models.TextField(blank=True, default='这个人很懒,什么都没有写', max_length=1024, null=True, verbose_name='关于我')),
                ('Motto', models.TextField(blank=True, default='没有座右铭', max_length=1024, null=True, verbose_name='座右铭')),
                ('BirthPlace', models.CharField(blank=True, default='江西', max_length=526, null=True, verbose_name='出生地')),
                ('BirthDay', models.CharField(blank=True, default='1998.4.2', max_length=256, null=True, verbose_name='生日')),
                ('LivesIn', models.CharField(blank=True, default='xx栋', max_length=526, null=True, verbose_name='居住地')),
                ('Gender', models.CharField(blank=True, default='保密', max_length=526, null=True, verbose_name='性别')),
                ('Status', models.CharField(blank=True, default='单身', max_length=526, null=True, verbose_name='状态')),
                ('MyEmail', models.CharField(blank=True, default='xx@163.com', max_length=526, null=True, verbose_name='邮箱')),
                ('QQ', models.CharField(blank=True, default='189219902', max_length=526, null=True, verbose_name='QQ')),
                ('WeChat', models.CharField(blank=True, default='Youyixin9842', max_length=526, null=True, verbose_name='微信')),
                ('Hobbies', models.TextField(blank=True, default='打羽毛球,编程', max_length=1024, null=True, verbose_name='爱好')),
                ('FavouriteTvShows', models.TextField(blank=True, default='法医秦明,心理罪,无罪之证', max_length=1024, null=True, verbose_name='最喜欢的网剧')),
                ('FavouriteMovies', models.TextField(blank=True, default='心理罪之城市之光', max_length=1024, null=True, verbose_name='最喜欢的电影')),
                ('FavouriteGames', models.TextField(blank=True, default='王者荣耀,英雄联盟', max_length=1024, null=True, verbose_name='最喜欢的游戏')),
                ('FavouriteMusic', models.TextField(blank=True, default='画,我会很诚实', max_length=1024, null=True, verbose_name='最喜欢的歌曲')),
                ('FavouriteBooks', models.TextField(blank=True, default='围城,皮囊,活着', max_length=1024, null=True, verbose_name='最喜欢的书籍')),
                ('FavouriteWriters', models.TextField(blank=True, default='...', max_length=1024, null=True, verbose_name='最喜欢的作者')),
                ('OtherInterests', models.TextField(blank=True, default='...', max_length=1024, null=True, verbose_name='其他爱好')),
                ('OthersAboutMe', models.TextField(blank=True, default='巴拉巴拉巴拉...', max_length=1024, null=True, verbose_name='其他关于我的信息')),
                ('ChannelsName', models.TextField(blank=True, max_length=1024, null=True, verbose_name='最新的channels通道名')),
                ('UserState', models.IntegerField(choices=[(1, '在线'), (2, '离线(勿扰)')], default=2, null=True, verbose_name='在线状态')),
                ('Check', models.BooleanField(blank=True, default=False, null=True, verbose_name='验证通过')),
                ('LearnId', models.CharField(default='1601020301', max_length=100, verbose_name='学号')),
                ('SumbitNumber', models.IntegerField(default=0, verbose_name='提交数')),
                ('AcNumber', models.IntegerField(default=0, verbose_name='AC数')),
                ('Point', models.IntegerField(default=0, verbose_name='贡献分')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfoImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='是否私密')),
                ('UserBackgroundImage', models.ImageField(blank=True, default='user/defaultback.jpg', null=True, upload_to='user/', verbose_name='个人背景图')),
                ('UserAvatar', models.ImageField(blank=True, default='user/defaultavatar.jpg', null=True, upload_to='user/', verbose_name='头像')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户头像和封面图',
                'verbose_name_plural': '用户头像和封面图',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='是否私密')),
                ('title', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'unique_together': {('user', 'title')},
            },
        ),
    ]
